Sort the array and split it into two halves.

Try these 2 ways of arranging:

Put left half in even indices and right half in odd indices (and) Put left half in odd indices and right half in even indices.

If any one of them satisfy the given condition, print it. Else print -1.


----------------------------------------------------------------------------------------------------------------------------


#include <bits/stdc++.h>
#define int long long 

using namespace std;

bool fun(vector<int>&left,vector<int>&right,int n){
    
        vector<int>ans;
        int i=0;
        int j=0;
        bool okk=1;
        
        while(i<left.size() and j<right.size()){
            if(okk){
                ans.push_back(left[i]);
                i++;
            }else{
                ans.push_back(right[j]);
                j++;
            }
            okk=!okk;
        }
        
        if(i<left.size()){
            ans.push_back(left[i]);
        }
        if(j<right.size()){
            ans.push_back(right[j]);
        }
        
        bool check=true;
        
        for(int i=1;i<n-1;i++){
            if((ans[i]>ans[i-1] and ans[i]>ans[i+1]) || (ans[i]<ans[i-1] and ans[i]<ans[i+1]) ){
                continue;
            }else{
                check=false;
                break;
            }
        }
        
         if(check){
        for(int i=0;i<n;i++){
            cout<<ans[i]<<" ";
        }
        }
        
        return check;
}

signed main()
{
    int t;
    cin>>t;
    
    int a=1;
    
    while(a<=t){
        
        int n;
        cin>>n;
        int arr[n];
        
        for(int i=0;i<n;i++) cin>>arr[i];
        
        sort(arr,arr+n);
        
        vector<int>left1,right1,left2,right2;
        
        for(int i=0;i<n;i++){
            if(i<(n+1)/2){
                left1.push_back(arr[i]);
                right2.push_back(arr[i]);
            }else{
                right1.push_back(arr[i]);
                left2.push_back(arr[i]);
            }
        }
        
        
        if(!fun(left1,right1,n) and !fun(left2,right2,n)){
               cout<<-1;
        }
    
         cout<<endl;
         a++;
    }
    
    return 0;
}
